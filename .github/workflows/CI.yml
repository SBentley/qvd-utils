# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI pipeline

on:
  push:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: rust-cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: rust-build
        uses: actions-rs/cargo@v1.0.1
        with:
          command: build
          args: --release --all-features --verbose

      - name: rust-test
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test

  python-test:
    needs: rust-build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pandas maturin        
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m venv .
        . bin/activate
        maturin develop
        deactivate
        rm -r lib/
        pytest -v --capture=tee-sys
  
  publish:
    needs: python-test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pandas maturin

    - name: Build Python package
      run: maturin build --release

    - name: List wheels
      if: matrix.os == 'windows-latest'
      run: dir target\wheels\

    - name: List wheels
      if:  matrix.os != 'windows-latest'
      run: find ./target/wheels/

    - name: PyPi publish        
      env:
        MATURIN_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: maturin publish --username ${{ secrets.PYPI_USERNAME}}
        
